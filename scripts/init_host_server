#!/bin/sh
# Setup script for pool host

while [[ $# > 1 ]]
do
key="$1"
shift

case $key in
    --github-bot)
    GITHUB_BOT=true
    shift
    ;;
    *)
    shift
    ;;
esac
done

# pass arguments to pool config vars
PREVIEW_REPOSITORY_URL=${1:-https://github.com/mookjp/flaskapp.git}
MAX_CONTAINERS=${2:-5}
POOL_BASE_DOMAIN=${3:-pool.dev}
GITHUB_BOT=${GITHUB_BOT:-false}

cd /tmp
mkdir -p /opt/pool
export POOL_BIN_PATH=/opt/pool/bin
export PATH=${POOL_BIN_PATH}:$PATH:/usr/local/bin

if [[ -f /etc/os-release ]] && [[ $(cat /etc/os-release | grep "NAME=CoreOS") ]]; then
    echo "CoreOS detected. Updating to latest docker.."
    curl -s https://get.docker.com/builds/Linux/x86_64/docker-latest -o ${POOL_BIN_PATH}/docker
    chmod +x ${POOL_BIN_PATH}/docker
    cat << EOF > /etc/systemd/system/docker.service 
.include /usr/lib/systemd/system/docker.service

[Service]
ExecStart=
ExecStart=${POOL_BIN_PATH}/docker -d
EOF
    sudo systemctl daemon-reload
    sudo systemctl enable docker
    sudo systemctl restart docker
fi

# load cache images on local if it exists (for speed to build vagrant)
IMAGE_APACHE_MOD_MRUBY="/app/images/apache-mod-mruby.tar"
if [[ -f  ${IMAGE_APACHE_MOD_MRUBY} ]]; then
    sudo docker load < ${IMAGE_APACHE_MOD_MRUBY} 
fi

# Add mantainance script to log in to docker
wget -q https://raw.githubusercontent.com/jpetazzo/nsenter/master/docker-enter -O ${POOL_BIN_PATH}/docker-enter
chmod +x ${POOL_BIN_PATH}/docker-enter

# build build-server
cd /app/docker/pool
docker build -t pool-server .
docker run -d -v /var/run/docker.sock:/var/run/docker.sock \
              --env MAX_CONTAINERS=${MAX_CONTAINERS} \
              --env PREVIEW_REPOSITORY_URL=${PREVIEW_REPOSITORY_URL} \
              --env POOL_BASE_DOMAIN=${POOL_BASE_DOMAIN} \
              --env GITHUB_BOT=${GITHUB_BOT} \
              --name pool -p 80:80 -p 8080:8080 pool-server
hostname pool
